# Generated by Django 4.2.11 on 2024-08-01 12:59

from django.db import migrations, models

def add_default_log_types(apps, schema_editor):
    # Get the models
    WindowsLogType = apps.get_model('log_management_app', 'WindowsLogType')
    LinuxLogType = apps.get_model('log_management_app', 'LinuxLogType')
    
    # Define default log types
    windows_log_types = [
        'Event Log',
        'Application Log',
        'Security Log',
        'System Log'
    ]
    
    linux_log_types = [
        'Syslog',
        'Auth Log',
        'Kernel Log',
        'Cron Log',
        'Mail Log',
        'Daemon Log'
    ]
    
    # Add default Windows log types
    for log_type in windows_log_types:
        WindowsLogType.objects.get_or_create(name=log_type)
    
    # Add default Linux log types
    for log_type in linux_log_types:
        LinuxLogType.objects.get_or_create(name=log_type)

class Migration(migrations.Migration):

    dependencies = [
        ('log_management_app', '0045_remove_windowsfilelogsource_log_encoding'),
    ]

    operations = [
        migrations.CreateModel(
            name='WindowsLogType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.RenameModel(
            old_name='LogType',
            new_name='LinuxLogType',
        ),
        migrations.CreateModel(
            name='LinuxLogSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_source_name', models.CharField(max_length=100)),
                ('hostname_ip_address', models.CharField(default='localhost', max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Online', 'Active'), ('Offline', 'Inactive')], default='Offline', max_length=10)),
                ('collection_mtd', models.CharField(default='Log streaming', max_length=50)),
                ('collection_interval', models.CharField(choices=[('5m', 'Every 5 minutes'), ('15m', 'Every 15 minutes'), ('30m', 'Every 30 minutes'), ('1h', 'Every 1 hour'), ('6h', 'Every 6 hours'), ('12h', 'Every 12 hours'), ('24h', 'Every 24 hours')], default='24h', max_length=10)),
                ('retention_policy', models.CharField(choices=[('7d', '7 days'), ('14d', '14 days'), ('30d', '30 days'), ('60d', '60 days'), ('90d', '90 days'), ('180d', '180 days'), ('365d', '365 days')], default='30d', max_length=10)),
                ('ingestion_mtd', models.CharField(choices=[('bash', 'Bash')], default='bash', max_length=30)),
                ('comments', models.TextField(blank=True, null=True)),
                ('activate', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('log_type', models.ManyToManyField(to='log_management_app.linuxlogtype')),
            ],
        ),
        migrations.AlterField(
            model_name='windowslogsource',
            name='log_type',
            field=models.ManyToManyField(to='log_management_app.windowslogtype'),
        ),
        migrations.RunPython(add_default_log_types),  # Add this line to run the function
    ]
